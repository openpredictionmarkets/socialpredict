services:
  db:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - ../data/postgres:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${POSTGRES_PORT}"
    networks:
      - socialpredict_network

  backend:
    container_name: "${BACKEND_CONTAINER_NAME}"
    image: "${BACKEND_IMAGE_NAME}"
    environment:
      ENVIRONMENT: ${APP_ENV}
      CONTAINER_NAME: ${BACKEND_CONTAINER_NAME}
      DB_HOST: db
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
    ports:
      - "${BACKEND_HOSTPORT}:${BACKEND_PORT}"
    env_file:
      - ../.env
    volumes:
      - ../backend:/backend
      - ../.env:/backend/.env.dev
    command: reflex -r '\.go$' -s -- sh -c './supervisor.sh'
    tty: true
    networks:
      - socialpredict_network
    depends_on:
      - db

  frontend:
    container_name: "${FRONTEND_CONTAINER_NAME}"
    image: "${FRONTEND_IMAGE_NAME}"
    environment:
      ENVIRONMENT: ${APP_ENV}
      DOMAIN: "https://${DOMAIN}"
    ports:
      - "${REACT_HOSTPORT}:${REACT_PORT}"
    env_file:
      - ../.env
    volumes:
      - ../frontend:/app
      - /app/node_modules
    stdin_open: true
    networks:
      socialpredict_network:
          ipv4_address: 172.29.0.10
    depends_on:
      - backend

  webserver:
    container_name: "${NGINX_CONTAINER_NAME}"
    image: nginx:latest
    environment:
      ENVIRONMENT: ${APP_ENV}
      DOMAIN: ${DOMAIN}
      BACKEND_PORT: ${BACKEND_PORT}
      FRONTEND_PORT: ${REACT_PORT}
    ports:
      - 80:80
      - 443:443
    env_file:
      - ../.env
    volumes:
      - ../data/nginx:/etc/nginx/templates/
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    networks:
      - socialpredict_network
    depends_on:
      - backend
      - frontend

  certbot:
    image: certbot/certbot:latest
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    networks:
      - socialpredict_network

networks:
  socialpredict_network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.29.0.0/16"
