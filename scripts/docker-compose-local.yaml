services:

  db:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgres:16.6-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data
    networks:
      - socialpredict_network

  backend:
    container_name: "${BACKEND_CONTAINER_NAME}"
    image: "${BACKEND_IMAGE_NAME}"
    restart: unless-stopped
    networks:
      - socialpredict_network
    env_file:
      - ../.env
    depends_on:
      - db

  frontend:
    container_name: "${FRONTEND_CONTAINER_NAME}"
    image: "${FRONTEND_IMAGE_NAME}"
    restart: unless-stopped
    networks:
      - socialpredict_network
    env_file:
      - ../.env
    depends_on:
      - backend

  webserver:
    container_name: "${NGINX_CONTAINER_NAME}"
    image: nginx:latest
    restart: unless-stopped
    environment:
      ENVIRONMENT: ${APP_ENV}
      DOMAIN: ${DOMAIN}
    volumes:
      - ../data/nginx/vhosts/prod:/etc/nginx/templates/
    networks:
      - socialpredict_network
    ports:
      - "${NGINX_PORT}:80"
    env_file:
      - ../.env
    depends_on:
      - backend
      - frontend

networks:
  socialpredict_network:
    name: socialpredict_network

volumes:
  pgdata: {}