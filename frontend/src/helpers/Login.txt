import React, { useState } from 'react';
import { useHistory } from 'react-router-dom';
import './Login.css';

function Login() {
  const history = useHistory();
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');

  const handleSubmit = async (event) => {
    event.preventDefault();
    setError(''); // Clear any existing error

    try {
      const response = await fetch('http://localhost:8086/api/v0/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ username, password }),
      });

      const responseData = await response.json();
      if (response.ok) {
        const token = responseData.token;
        console.log('Login successful:', responseData);
        localStorage.setItem('token', token); // Store the token
        console.log('Login successful, token:', token);
        // Handle successful login
        history.push('/');
      } else if (response.status === 401) {
        // Handle unauthorized response
        console.error('Login failed: Invalid credentials');
        setError(responseData.message || 'Login failed: Invalid credentials');
      } else {
        console.error('Login failed:', responseData);
        // Optionally, handle other types of errors
      }
    } catch (error) {
      console.error('Error during login:', error);
      // Set an error message in the state to display to the user
      setError('Incorrect Login');
    }

  };


  return (
    <form onSubmit={handleSubmit} className="login-form">
      <div>
        <label>
          Username:
          <input type="text" value={username} onChange={(e) => setUsername(e.target.value)} />
        </label>
      </div>
      <div>
        <label>
          Password:
          <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} />
        </label>
      </div>
      {error && <div className="error-message">{error}</div>} {/* Display error message */}
      <button type="submit">Login</button>
    </form>
  );
}

export default Login;
